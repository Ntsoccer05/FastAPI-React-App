# 開発環境用
version: "3.8"
services:
  db:
    image: postgres
    # ホスト名、ユーザー名など変更時はvolume(今回は以下よりdockerフォルダ)を削除し、docker-compose build --no-cache
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
      - ./docker/postgres/init.d:/docker-entrypoint-initdb.d
      - ./docker/postgres/pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
  app:
    build: 
      context: ./
      dockerfile: containers/fastapi/Dockerfile
    image: app
    volumes:
      - ./backend:/code
    ports:
    # 右側のポートもAPP_PORTに合わせる必要がある
      - "${APP_PORT}:3300"
    #ポート番号をAPP_PORTに合わせる必要がある(docker compose up でポート3000でfastAPIのアプリが立ち上がる)
    command: poetry run uvicorn main:app --reload --host 0.0.0.0 --port 3300
    depends_on:
      - db
  db-gui:
    container_name: db-gui
    image: dpage/pgadmin4
    volumes:
    # var/lib/pgadminのフォルダを作成しておく必要あり
      - ./docker/pgadmin:/var/lib/pgadmin
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:80"

  front:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend
    ports:
      - "${FRONT_PORT}:5173" #Vite用
      - "24678:24678"
    tty: true
    command: sh -c "npm install && npm run dev"
    environment:
      - CHOKIDAR_USEPOLLING=true